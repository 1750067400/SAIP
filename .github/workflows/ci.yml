name: CI Pipeline

on:
  push:
    branches: [ deploy ]
  workflow_dispatch:

env:
  # APP_IMAGE_NAME: 127.0.0.1:5000/saip
  # DOCKER_USERNAME: admin
  # DOCKER_PASSWORD: hhelibeblxyhh123

  REGISTRY: 127.0.0.1:15954
  IMAGE_NAME: saip
  SONAR_HOST_URL: http://47.84.187.219:18712
  SONAR_PROJECT_KEY: saip

jobs:
  build-test-scan-push:
    runs-on: self-hosted
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show workspace & list files
        run: |
          pwd
          ls -al

      - name: Unit tests (backend)
        working-directory: backend
        run: mvn -B test

      # === 新增：前端安全扫描（Semgrep） ===
      - name: Frontend security scan (Semgrep)
        working-directory: frontend
        env:
          SEMGREP_RULES: >-
            p/owasp-top-ten
            p/javascript
            p/react
        run: |
          # 若前端目录不存在则跳过（避免非前端仓库失败）
          if [ ! -d "." ]; then
            echo "No frontend directory, skip semgrep."
            exit 0
          fi

          docker pull semgrep/semgrep:latest
          # 说明：
          # --config 使用官方规则集
          # --metrics=off 关闭遥测
          # --severity ERROR 仅把高危作为失败条件（可改成 WARNING/INFO）
          # --sarif 输出 SARIF 供 GitHub Code Scanning 展示
          docker run --rm \
            -v "$PWD:/src" \
            -w /src \
            semgrep/semgrep:latest \
            semgrep --config $SEMGREP_RULES \
                    --metrics=off \
                    --severity ERROR \
                    --sarif --output ../semgrep-results.sarif

      - name: Upload Semgrep SARIF to GitHub code scanning
        if: always()   # 即便失败也上传结果，方便查看
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
          category: semgrep-frontend

      - name: SonarQube scan (backend)
        working-directory: backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B clean verify sonar:sonar \
            -DskipTests \
            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN}

      - name: Package app (skip tests)
        working-directory: backend
        run: mvn -B clean package -DskipTests

      - name: Log in to Nexus Docker registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login $REGISTRY -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin

      - name: Build & push docker image
        working-directory: backend
        env:
          TAG: ${{ github.run_number }}
        run: |
          docker build -t $REGISTRY/${IMAGE_NAME}:$TAG -t $REGISTRY/${IMAGE_NAME}:latest .
          docker push $REGISTRY/${IMAGE_NAME}:$TAG
          docker push $REGISTRY/${IMAGE_NAME}:latest

      - name: Export image tag for CD
        run: echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Upload artifact (image tag)
        uses: actions/upload-artifact@v4
        with:
          name: built-image-tag
          path: |
            ${{ github.workspace }}/.git/HEAD
          retention-days: 1