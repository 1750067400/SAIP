name: CI Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  BASE_IMAGE_NAME: saip
  APP_IMAGE_NAME: localhost:5000/saip

jobs:


  # 第一步：运行测试
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Show current directory
      - run: pwd

      - name: List files
      - run: ls -al

      - uses: actions/checkout@v3

      - name: Run Maven tests
        run: ./mvnw test

  # 第二步：构建基础镜像（每次都执行）
  build_base:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build base Docker image
        run: docker build -t ${{ env.BASE_IMAGE_NAME }}:latest -f Dockerfile.base .

  # 第三步：构建并推送应用镜像
  build_and_push:
    needs: [ build_base ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: localhost:5000
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images
        run: |
          docker build \
            --cache-from=${{ env.BASE_IMAGE_NAME }}:latest \
            -t ${{ env.APP_IMAGE_NAME }}:${{ github.run_number }} \
            -t ${{ env.APP_IMAGE_NAME }}:latest .
          docker push ${{ env.APP_IMAGE_NAME }}:${{ github.run_number }}
          docker push ${{ env.APP_IMAGE_NAME }}:latest

  # 第四步：本地部署测试
  deploy_locally:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy locally with Docker
        run: |
          docker stop saip || true
          docker rm saip  || true
          docker run -d --name saip -p 8080:8080 ${{ env.APP_IMAGE_NAME }}:latest

  # 第五步：生产部署（带审核）
  deploy_production:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Deploy to Production
        run: |
          echo "开始部署到生产环境..."
          # 填入实际的生产部署逻辑（如 kubectl/ssh）
