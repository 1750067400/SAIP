name: CD

on:
  workflow_run:
    workflows: [ "CI Pipeline" ]  
    types: [ completed ]
    branches: [ main ]       
  workflow_dispatch:

env:
  REGISTRY: 127.0.0.1:14647 
  IMAGE_NAME: saip
  CONTAINER_NAME: saip
  BACKEND_PORT: 8080
  FRONTEND_PORT: 5005
  NETWORK: infra_default
  SPRING_PROFILE: cloud
  FRONTEND_CONTAINER: saip-frontend

jobs:
  deploy:
    # 仅当 CI 成功时从 workflow_run 触发；如果是手动触发则忽略这个条件
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted
    environment:
      name: production   # 或 staging；可在环境里开启手动审批/保护
    concurrency:
      group: cd-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout (for using artifacts if needed)
        uses: actions/checkout@v4

      - name: Log in to Nexus Docker registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login $REGISTRY -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin

      # 方案 A：默认部署 latest
      - name: Pull image (latest)
        run: docker pull $REGISTRY/${IMAGE_NAME}:latest

      - name: Stop & remove old container
        run: |
          docker stop ${CONTAINER_NAME} || true
          docker rm ${CONTAINER_NAME} || true

      - name: Run backend container
        run: |
          docker run -d --name ${CONTAINER_NAME} \
            --network ${NETWORK} \
            -e SPRING_PROFILES_ACTIVE=${SPRING_PROFILE} \
            -p ${BACKEND_PORT}:8080 \
            $REGISTRY/${IMAGE_NAME}:latest

      - name: Sync frontend assets to host dir
        run: |
            set -e
            DEPLOY_DIR=/opt/saip-frontend
            mkdir -p "$DEPLOY_DIR"

            # 选择要发布的目录：优先 build/、dist/，否则整个 frontend/
            SRC=""
            for d in frontend/build frontend/dist frontend; do
            if [ -d "$d" ]; then SRC="$d"; break; fi
            done
            if [ -z "$SRC" ]; then
            echo "No frontend directory found"; exit 1
            fi

            rsync -a --delete "$SRC"/ "$DEPLOY_DIR"/
            echo "Synced $SRC -> $DEPLOY_DIR"

        # 用 Nginx 容器托管前端
      - name: Run frontend container (nginx)
        run: |
            docker rm -f ${FRONTEND_CONTAINER} || true
            docker run -d --name ${FRONTEND_CONTAINER} \
            --network ${NETWORK} \
            -p ${FRONTEND_PORT}:80 \
            -v /opt/saip-frontend:/usr/share/nginx/html:ro \
            nginx:alpine